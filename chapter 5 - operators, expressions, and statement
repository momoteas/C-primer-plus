Introducing loop:

Foundamental operators:
        1) assignment operator: =
        2) some terminology: data objects, Lvalues, Rvalues, and operands;
        3) operators precedence: Table 5.1. Operators in Order of Decreasing Precedence
        4) Precedence and the Order of Evaluation: 
        
Some additional operators:
        1) the sizeof operator and the size_t type: 
        2) C has a typedef mechanism (discussed further in Chapter 14, "Structures and Other Data Forms") that lets you 
           create an alias for an existing type. For example: typedef double real;
        3) C99 goes a step further and supplies %zd as a printf() specifier for displaying a If your system doesn't implement
           %zd , you can try using %u or %lu instead.

Modulus operator: %;

Increment and decrement operators: ++ and --;

Expressions and statements: 
        1) expression: An expression consists of a combination of operators and operands;
        2) Every Expression Has a Value:
        3) statements: Statements are the primary building blocks of a program. A program is a series of statements with some
           necessary punctuation.
        4) What makes a complete instruction? First, C considers any expression to be a statement if you append a semicolon;
        5) side effects and sequence points: A sequence point is a point in program execution at which all side effects are 
           evaluated before going on to the next step. In C, the semicolon in a statement marks a sequence point;
        6) compound statements (blocks): 
        7) style tips: popular style for positioning the braces for a block:
                while (index++ < 10) {
                   sam = 10*index + 2;
                   printf("sam = %d \n", sam);
                }
                
Type conversion:
        1) The ranking of types, from highest to lowest, is long double , double , float , unsigned long long , long long , 
           unsigned long , long , unsigned int , and int;
        2) In any operation involving two types, both values are converted to the higher ranking of the two types;
        3) In an assignment statement, the final result of the calculations is converted to the type of the variable being 
           assigned a value;
        4) When passed as function arguments, char and short are converted to int , and converted to double;
        
The cast operator: 

Function with arguments: 
        1) arguments VS parameters: the C99 documentation has decided to use the term argument for actual argument or actual 
           parameter and the term parameter for formal parameter or formal argument;
           
Key concepts:
        


